import streamlit as st
import scipy.stats as stats
import math
import matplotlib.pyplot as plt

# Configura√ß√µes da p√°gina
st.set_page_config(page_title="Calculadora de Intervalo de Confian√ßa", page_icon="üîç")
# T√≠tulo da p√°gina
st.title("üîç Calculadora de Intervalo de Confian√ßa (IC)")
st.write("Este aplicativo calcula o intervalo de confian√ßa para uma m√©dia com base nos par√¢metros fornecidos.")
st.write("---")

# Entrada de dados do usu√°rio
mean = st.number_input("Digite a m√©dia da amostra (Œº)", value=50.0)
std_dev = st.number_input("Digite o desvio padr√£o da amostra (s)", value=10.0, min_value=0.0)
sample_size = st.number_input("Digite o tamanho da amostra (n)", min_value=1, value=30, step=1)
confidence_level = st.selectbox("Escolha o n√≠vel de confian√ßa (%)", [90, 95, 99])

# Bot√£o para calcular o intervalo de confian√ßa
if st.button("Calcular IC"):
    # C√°lculo do valor cr√≠tico z com base no n√≠vel de confian√ßa
    alpha = 1 - (confidence_level / 100)
    z_value = stats.norm.ppf(1 - alpha / 2)

    # C√°lculo do erro padr√£o da m√©dia (EPM)
    standard_error = std_dev / math.sqrt(sample_size)

    # C√°lculo da margem de erro (ME)
    margin_of_error = z_value * standard_error

    # C√°lculo do intervalo de confian√ßa
    lower_bound = mean - margin_of_error
    upper_bound = mean + margin_of_error

    # Exibir os resultados
    st.write(f"### Intervalo de Confian√ßa de {confidence_level}%")
    st.write(f"- Limite Inferior: {lower_bound:.2f}")
    st.write(f"- Limite Superior: {upper_bound:.2f}")

    st.write(f"Este intervalo de confian√ßa significa que estamos {confidence_level}% confiantes de que a m√©dia verdadeira da popula√ß√£o est√° entre os limites calculados.")
    # Explica√ß√£o divertida sobre intervalo de confian√ßa
    st.write("### Explica√ß√£o Divertida do Intervalo de Confian√ßa")
    st.write(
        f"Imagine que voc√™ est√° jogando bolinhas de papel em uma lixeira do outro lado da sala. A lixeira √© o alvo e voc√™ quer saber se a maioria das bolinhas vai cair dentro dela ou n√£o. O intervalo de confian√ßa √© como uma zona imagin√°ria ao redor da lixeira, que diz: 'Olha, eu n√£o sei exatamente onde cada bolinha vai cair, mas estou {confidence_level}% confiante de que a maioria das bolinhas vai parar dentro dessa √°rea!'. Quanto mais confiante voc√™ quer estar, maior voc√™ precisa fazer essa zona. Ent√£o, o intervalo de confian√ßa √© a sua maneira de garantir, com certa margem de seguran√ßa, que a maioria dos arremessos est√° na dire√ß√£o certa."
    )

    # An√°lise visual dos resultados
    fig, ax = plt.subplots()
    ax.axvline(lower_bound, color='red', linestyle='--', label='Limite Inferior')
    ax.axvline(upper_bound, color='red', linestyle='--', label='Limite Superior')
    ax.axvline(mean, color='blue', linestyle='-', label='M√©dia da Amostra')
    ax.fill_betweenx([0, 1], lower_bound, upper_bound, color='red', alpha=0.4)
    ax.set_xlabel('Valor')
    ax.set_yticks([])
    ax.set_title(f"Intervalo de Confian√ßa de {confidence_level}%")
    ax.legend()

    st.pyplot(fig)
else:
    st.info("Aguardando o c√°lculo do intervalo de confian√ßa.")